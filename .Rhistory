library(lof)
run_app()
install.packages('screenpackages')
library(lof)
run_app()
library(screenshot)
install.packages('screenshot')
install.packages('shinyscreenshot')
library(shinyscreenshot)
library(lof)
run_app()
library(tidyverse)
run_app()
library(lof)
run_app()
library(lof)
run_app()
library(lof)
run_app()
library(lof)
run_app()
library(lof)
run_app()
library(lof)
run_app()
library(lof)
library(lof)
run_app()
library(lof)
run_app()
library(lof)
run_app()
library(lof)
run_app()
library(lof)
run_app()
library(lof)
run_app()
library(DMwR)
library(lof)
run_app()
library(lof)
run_app()
dddfff
rownames(dddfff)
dffff
dffff %>%  filter(!is.na(!! rlang::sym('REPOSID') )
)
dffff
dffff %>%  filter(!is.na(!! rlang::sym('REPOSID') )
)
library(lof)
run_app()
library(lof)
run_app()
library(lof)
run_app()
library(lof)
run_app()
library(tidyverse)
library(ggfortify)
library("FactoMineR")
library("factoextra")
library(DMwR)
library(data.table)
options(digits=4)
library(shiny)
library(shinydashboard)
#source('global.R')
#source("chooser.R")
library(ggrepel)
source("upload.R")
library(lof)
run_app()
library(lof)
run_app()
library(lof)
run_app()
library(lof)
run_app()
library(lof)
run_app()
library(lof)
run_app()
library(lof)
run_app()
library(lof)
run_app()
library(lof)
run_app()
library(lof)
run_app()
library(lof)
run_app()
library(lof)
run_app()
library(lof)
run_app()
run_app()
library(lof)
run_app()
add_dockerfile(
path = "DESCRIPTION",
output = "Dockerfile",
pkg = get_golem_wd(),
from = paste0("rocker/verse:", R.Version()$major, ".", R.Version()$minor),
as = NULL,
port = 80,
host = "0.0.0.0",
sysreqs = TRUE,
repos = c(CRAN = "https://cran.rstudio.com/"),
expand = FALSE,
open = TRUE,
update_tar_gz = TRUE,
build_golem_from_source = TRUE,
extra_sysreqs = NULL
)
golem::add_dockerfile()
golem::add_dockerfile_with_renv_shinyproxy(output_dir = "deploy")
setwd("~/Library/CloudStorage/OneDrive-NationalInstitutesofHealth/R/lof/deploy")
docker build -f Dockerfile_base --progress=plain -t lof_base .
remotes::install_github()
remotes::install_github(foocheung)
remotes::install_github(foocheung/lof)
remotes::install_github("foocheung/lof")
github
remotes::install_github("cheungf/lof")
install_github("foocheung/lof")
library(devtools)
install_github("foocheung/lof")
install_github("foocheung/lof")
install_github("foocheung/lof")
library(lof)
unload(lof)
remove.packages(lof)
remove.packages('lof')
library(lof)
remove.packages(lof)
